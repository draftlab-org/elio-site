---
import { Image } from "astro:assets";
import { getCollection } from "astro:content";
import { marked } from "marked";
import { twMerge } from "tailwind-merge";

const portfolio = await getCollection("portfolio");

// console.log(portfolio);

const colorStyles = {
  solid: {
    beige: "bg-brand-beige",
    navy50: "bg-brand-navy-50",
    navy100: "bg-brand-navy-100",
    purple: "bg-brand-purple",
    salmon: "bg-brand-salmon",
    mint: "bg-brand-mint",
    sky50: "bg-brand-sky-50",
    sky100: "bg-brand-sky-100",
    gray50: "bg-brand-gray-50",
    gray100: "bg-brand-gray-100",
  },
  from: {
    beige: "from-brand-beige",
    navy50: "from-brand-navy-50",
    navy100: "from-brand-navy-100",
    purple: "from-brand-purple",
    salmon: "from-brand-salmon",
    mint: "from-brand-mint",
    sky50: "from-brand-sky-50",
    sky100: "from-brand-sky-100",
    gray50: "from-brand-gray-50",
    gray100: "from-brand-gray-100",
  },
  to: {
    beige: "to-brand-beige",
    navy50: "to-brand-navy-50",
    navy100: "to-brand-navy-100",
    purple: "to-brand-purple",
    salmon: "to-brand-salmon",
    mint: "to-brand-mint",
    sky50: "to-brand-sky-50",
    sky100: "to-brand-sky-100",
    gray50: "to-brand-gray-50",
    gray100: "to-brand-gray-100",
  },
};

const styles = portfolio.map(({ data }) => ({
  primary: colorStyles.solid[data.background.primary_color],
  secondary:
    data.background.secondary_color &&
    twMerge(
      "bg-linear-to-br",
      colorStyles.from[data.background.primary_color],
      colorStyles.to[data.background.secondary_color],
    ),
}));

// console.log(styles);
---

<section id="bento-grid" class="">
  <div class="mx-auto max-w-2xl px-6 lg:max-w-7xl lg:px-8">
    <div
      class="mt-10 grid grid-flow-dense auto-rows-fr grid-cols-1 grid-rows-12 gap-6 sm:mt-16 lg:grid-cols-2"
    >
      {
        portfolio &&
          portfolio.map(({ data }, index) => (
            <div
              class={twMerge(
                "col-span-1 flex flex-col justify-between gap-8 rounded-2xl border-[1px] border-black p-6 pb-0",
                data.background.secondary_color
                  ? styles[index].secondary
                  : styles[index].primary,
                data.container_size === "short" && "row-span-1",
                data.container_size === "tall" && "row-span-2",
                data.container_size === "grande" && "row-span-3",
                data.container_size === "venti" && "row-span-4",
              )}
            >
              <div>
                <p class="text-xl font-light">
                  <span class="font-semibold">{data.id}</span> /
                  <span set:html={marked.parseInline(data.description)} />
                </p>
                <div class="tags mt-2 inline-flex gap-2">
                  <span class="inline-flex items-center rounded-md bg-black/10 px-2 py-1 text-base font-medium text-black">
                    {data.role}
                  </span>
                  <span class="inline-flex items-center rounded-md bg-black/10 px-2 py-1 text-base font-medium text-black">
                    {data.period}
                  </span>
                </div>
              </div>
              <div
                class={twMerge(
                  "mb-6 px-12",
                  data.image.align === "bottom" && "mb-0",
                )}
              >
                <Image
                  src={data.image.src}
                  alt={data.id}
                  class={twMerge(
                    "fill-brand-purple mx-auto min-w-48",
                    data.image.colorized && "mix-blend-luminosity",
                  )}
                />
              </div>
            </div>
          ))
      }
    </div>
  </div>
</section>
